AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: MPA-AWS
Resources:
  MPAOperativeSelectionLambda1Parameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "Parameter to specify which operativity type to choose"
      Name: 'mpa_ops_type_1'
      AllowedPattern: "^(OPS-1|OPS-2|OPS-3|OPS-4)$"
      Type: StringList
      Value: 'OPS-1'
  MPAOperativeSelectionLambda2Parameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "Parameter to specify which operativity type to choose"
      Name: 'mpa_ops_type_2'
      AllowedPattern: "^(OPS-1|OPS-2|OPS-3|OPS-4)$"
      Type: StringList
      Value: 'OPS-3'
  MPAOperativeParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "Parameter to specify TP/SL to be used with Full trade management"
      Name: 'mpa_ops_1'
      Type: StringList
      Value: '[{"tp_percentage":0.2,"sl_percentage": 4.5, "size": "75"},{"tp_percentage":4,"sl_percentage": 4.5, "size": "25"}]'
  MPAOperative2Parameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "Parameter to specify TP/SL to be used with Partial trade management"
      Name: 'mpa_ops_2'
      Type: StringList
      Value: '[{"tp_percentage":0.2,"sl_percentage": 5, "size": "50"},{"tp_percentage":0.5,"sl_percentage": 5, "size": "25"},{"tp_percentage":0.9,"sl_percentage": 5, "size": "12.5"},{"tp_percentage":4,"sl_percentage": 5, "size": "6.25"}]'
  MPAOperative3Parameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "Parameter to specify TP/SL to be used with Partial trade management"
      Name: 'mpa_ops_3'
      Type: StringList
      Value: '[{"tp_percentage":0.5,"sl_percentage": 4.5, "size": "75"}]'
  MPAOperative4Parameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "Parameter to specify TP/SL to be used with Partial trade management"
      Name: 'mpa_ops_4'
      Type: StringList
      Value: '[{"tp_percentage":0.5,"sl_percentage": 4.5, "size": "75"},{"tp_percentage":4,"sl_percentage": 4.5, "size": "25"}]'
  MPALambdaLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: mpa-layer
      Description: My Python dependencies
      ContentUri: layers/
      CompatibleRuntimes:
        - python3.11
      LicenseInfo: 'MIT'
      RetentionPolicy: Retain
      CompatibleArchitectures:
        - x86_64
    Metadata:
      BuildMethod: python3.11
      BuildArchitecture: x86_64

  MPALambdaFunctionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: '/'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AdministratorAccess'
# ----- BTC -----
  MPATradeBTC:
    Type: AWS::Serverless::Function
    Properties:
      Layers:
        - !Ref MPALambdaLayer
      CodeUri: lambda_function/
      Handler: handler.lambda_handler
      Role: !GetAtt MPALambdaFunctionRole.Arn
      Runtime: python3.11
      Architectures:
        - x86_64
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: MPA
          POWERTOOLS_LOG_LEVEL: INFO
          ENV: dev
          DEV_AWS_SECRET: bybit/test/btc
          PROD_AWS_SECRET: BybitLoma
          BYBIT_ORDER_TYPE: Market
          BYBIT_CATEGORY: linear
          BYBIT_MARKET_UNIT: baseCoin
          BYBIT_ACCOUNT_TYPE: UNIFIED
          BYBIT_IS_LEVERAGE: 0
          BYBIT_TRADE_MODE: 1
          BYBIT_BUY_LEVERAGE: 20
          BYBIT_SELL_LEVERAGE: 20
          BYBIT_SYMBOL: BTCUSDT
          BYBIT_TRADE_INDEX: 3
          BYBIT_SIZE_TRADE: 0.02
          BYBIT_POSITION_COIN: BTC
          SSM_OPERATIVE_1_TRADE: 'mpa_ops_1'
          SSM_OPERATIVE_2_TRADE: 'mpa_ops_2'
          SSM_OPERATIVE_3_TRADE: 'mpa_ops_3'
          SSM_OPERATIVE_4_TRADE: 'mpa_ops_4'
          BYBIT_TRADE_MANAGEMENT: 'mpa_ops_type_1'
      MemorySize: 512
      Timeout: 180
  MPATradeBTCStandard:
    Type: AWS::Serverless::Function
    Properties:
      Layers:
        - !Ref MPALambdaLayer
      CodeUri: lambda_function/
      Handler: handler.lambda_handler
      Role: !GetAtt MPALambdaFunctionRole.Arn
      Runtime: python3.11
      Architectures:
        - x86_64
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: MPA
          POWERTOOLS_LOG_LEVEL: INFO
          ENV: dev
          DEV_AWS_SECRET: bybit/test/standard/btc
          PROD_AWS_SECRET: BybitLoma
          BYBIT_ORDER_TYPE: Market
          BYBIT_CATEGORY: linear
          BYBIT_MARKET_UNIT: baseCoin
          BYBIT_ACCOUNT_TYPE: CONTRACT
          BYBIT_IS_LEVERAGE: 0
          BYBIT_TRADE_MODE: 1
          BYBIT_BUY_LEVERAGE: 20
          BYBIT_SELL_LEVERAGE: 20
          BYBIT_SYMBOL: BTCUSDT
          BYBIT_TRADE_INDEX: 3
          BYBIT_SIZE_TRADE: 0.02
          BYBIT_POSITION_COIN: BTC
          SSM_OPERATIVE_1_TRADE: 'mpa_ops_1'
          SSM_OPERATIVE_2_TRADE: 'mpa_ops_2'
          SSM_OPERATIVE_3_TRADE: 'mpa_ops_3'
          SSM_OPERATIVE_4_TRADE: 'mpa_ops_4'
          BYBIT_TRADE_MANAGEMENT: 'mpa_ops_type_1'
      MemorySize: 512
      Timeout: 180
# ----- ETH -----
  MPATradeETH:
    Type: AWS::Serverless::Function
    Properties:
      Layers:
        - !Ref MPALambdaLayer
      CodeUri: lambda_function/
      Handler: handler.lambda_handler
      Role: !GetAtt MPALambdaFunctionRole.Arn
      Runtime: python3.11
      Architectures:
        - x86_64
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: MPA
          POWERTOOLS_LOG_LEVEL: INFO
          ENV: dev
          DEV_AWS_SECRET: bybit/test/eth
          PROD_AWS_SECRET: BybitLoma
          BYBIT_ORDER_TYPE: Market
          BYBIT_CATEGORY: linear
          BYBIT_MARKET_UNIT: baseCoin
          BYBIT_ACCOUNT_TYPE: UNIFIED
          BYBIT_IS_LEVERAGE: 0
          BYBIT_TRADE_MODE: 1
          BYBIT_BUY_LEVERAGE: 20
          BYBIT_SELL_LEVERAGE: 20
          BYBIT_SYMBOL: ETHUSDT
          BYBIT_TRADE_INDEX: 3
          BYBIT_SIZE_TRADE: 0.05
          BYBIT_POSITION_COIN: ETH
          SSM_OPERATIVE_1_TRADE: 'mpa_ops_1'
          SSM_OPERATIVE_2_TRADE: 'mpa_ops_2'
          SSM_OPERATIVE_3_TRADE: 'mpa_ops_3'
          SSM_OPERATIVE_4_TRADE: 'mpa_ops_4'
          BYBIT_TRADE_MANAGEMENT: 'mpa_ops_type_1'
      MemorySize: 512
      Timeout: 180
  MPATradeETHStandard:
    Type: AWS::Serverless::Function
    Properties:
      Layers:
        - !Ref MPALambdaLayer
      CodeUri: lambda_function/
      Handler: handler.lambda_handler
      Role: !GetAtt MPALambdaFunctionRole.Arn
      Runtime: python3.11
      Architectures:
        - x86_64
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: MPA
          POWERTOOLS_LOG_LEVEL: INFO
          ENV: dev
          DEV_AWS_SECRET: bybit/test/standard/eth
          PROD_AWS_SECRET: BybitLoma
          BYBIT_ORDER_TYPE: Market
          BYBIT_CATEGORY: linear
          BYBIT_MARKET_UNIT: baseCoin
          BYBIT_ACCOUNT_TYPE: CONTRACT
          BYBIT_IS_LEVERAGE: 0
          BYBIT_TRADE_MODE: 1
          BYBIT_BUY_LEVERAGE: 20
          BYBIT_SELL_LEVERAGE: 20
          BYBIT_SYMBOL: ETHUSDT
          BYBIT_TRADE_INDEX: 3
          BYBIT_SIZE_TRADE: 0.02
          BYBIT_POSITION_COIN: ETH
          SSM_OPERATIVE_1_TRADE: 'mpa_ops_1'
          SSM_OPERATIVE_2_TRADE: 'mpa_ops_2'
          SSM_OPERATIVE_3_TRADE: 'mpa_ops_3'
          SSM_OPERATIVE_4_TRADE: 'mpa_ops_4'
          BYBIT_TRADE_MANAGEMENT: 'mpa_ops_type_1'
      MemorySize: 512
      Timeout: 180
# ----- SOL -----
  MPATradeSOL:
    Type: AWS::Serverless::Function
    Properties:
      Layers:
        - !Ref MPALambdaLayer
      CodeUri: lambda_function/
      Handler: handler.lambda_handler
      Role: !GetAtt MPALambdaFunctionRole.Arn
      Runtime: python3.11
      Architectures:
        - x86_64
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: MPA
          POWERTOOLS_LOG_LEVEL: INFO
          ENV: dev
          DEV_AWS_SECRET: bybit/test/sol
          PROD_AWS_SECRET: BybitLoma
          BYBIT_ORDER_TYPE: Market
          BYBIT_CATEGORY: linear
          BYBIT_MARKET_UNIT: baseCoin
          BYBIT_ACCOUNT_TYPE: UNIFIED
          BYBIT_IS_LEVERAGE: 0
          BYBIT_TRADE_MODE: 1
          BYBIT_BUY_LEVERAGE: 20
          BYBIT_SELL_LEVERAGE: 20
          BYBIT_SYMBOL: SOLUSDT
          BYBIT_TRADE_INDEX: 3
          BYBIT_SIZE_TRADE: 0.05
          BYBIT_POSITION_COIN: SOL
          SSM_OPERATIVE_1_TRADE: 'mpa_ops_1'
          SSM_OPERATIVE_2_TRADE: 'mpa_ops_2'
          SSM_OPERATIVE_3_TRADE: 'mpa_ops_3'
          SSM_OPERATIVE_4_TRADE: 'mpa_ops_4'
          BYBIT_TRADE_MANAGEMENT: 'mpa_ops_type_1'
      MemorySize: 512
      Timeout: 180
  MPATradeSOLStandard:
    Type: AWS::Serverless::Function
    Properties:
      Layers:
        - !Ref MPALambdaLayer
      CodeUri: lambda_function/
      Handler: handler.lambda_handler
      Role: !GetAtt MPALambdaFunctionRole.Arn
      Runtime: python3.11
      Architectures:
        - x86_64
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: MPA
          POWERTOOLS_LOG_LEVEL: INFO
          ENV: dev
          DEV_AWS_SECRET: bybit/test/standard/sol
          PROD_AWS_SECRET: BybitLoma
          BYBIT_ORDER_TYPE: Market
          BYBIT_CATEGORY: linear
          BYBIT_MARKET_UNIT: baseCoin
          BYBIT_ACCOUNT_TYPE: CONTRACT
          BYBIT_IS_LEVERAGE: 0
          BYBIT_TRADE_MODE: 1
          BYBIT_BUY_LEVERAGE: 20
          BYBIT_SELL_LEVERAGE: 20
          BYBIT_SYMBOL: SOLUSDT
          BYBIT_TRADE_INDEX: 3
          BYBIT_SIZE_TRADE: 0.02
          BYBIT_POSITION_COIN: SOL
          SSM_OPERATIVE_1_TRADE: 'mpa_ops_1'
          SSM_OPERATIVE_2_TRADE: 'mpa_ops_2'
          SSM_OPERATIVE_3_TRADE: 'mpa_ops_3'
          SSM_OPERATIVE_4_TRADE: 'mpa_ops_4'
          BYBIT_TRADE_MANAGEMENT: 'mpa_ops_type_1'
      MemorySize: 512
      Timeout: 180